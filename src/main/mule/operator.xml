<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
	<flow name="operatorFlow" doc:id="cb479876-2a47-471f-acaf-aa3b0151394e" >
		<ee:transform doc:name="--++" doc:id="aab5667a-a61e-4629-a6e7-9bb8990d217e" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	"concatNumbers": [1,2,3] ++ [4,2,3],
	"UnconNumbers": [1,2,3] -- [4,3,6],
	"Payload1": "Hi::" ++ "Bene"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<ee:transform doc:name="Average" doc:id="d3ac4e24-1110-4bc3-ada6-9764f86b9f05">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	"avg1": avg([1,100]),
	"avg2": avg([2,500,5])
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<ee:transform doc:name="distinctBy" doc:id="1f0f50a0-a351-428a-a679-668b899fb77f" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
var studentDetails ={
	"name": "Benevanio",
	"subject":[
		"math",
		"physics",
		"science",
		"math"		 
	],
	"semester": "1st"
}
/*[0,2,3,4,5,5,6,7,8,9,10,9,10,2] distinctBy ((item) -> {
	"RemoveDuplicat": item
})
* 
*/
---
studentDetails.subject distinctBy $]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<ee:transform doc:name="endsWith" doc:id="1a684d0e-4114-42a6-a99e-f73dd9bb7216" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
["Mulesoft" endsWith  "fts"]]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<ee:transform doc:name="find" doc:id="98f5ca23-dc56-4f4b-aeb9-c63d0587e101" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
["a", "b", "c", "d"] find("a")]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="operatorFlow1" doc:id="02f65edd-3a7b-4147-b4c5-9b321fdf7ab4" >
		<ee:transform doc:name="indexOF" doc:id="dadc7e82-eff0-43a9-b5a1-302bb24e33bc" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	"Key1":["a", "b", "c", "d"] indexOf  "d",
	"Key2": "benevanio" indexOf  "o"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<ee:transform doc:name="isSomething" doc:id="3d6ec4a4-9a3c-4595-b43c-3499de51f69e" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	isBlank: {
		"isBlank1": isBlank(""),
	    "isBlank2": isBlank("a"),
		"isBlank3": isBlank(null),
	},
	isDecimal:{
	 	"isDecimal": isDecimal(1.2),
	 	"isDecimal": isDecimal(1)
	},
	isEmp:{
		"IsEmpty":isEmpty([]),
		"IsEmpty":isEmpty({"Bene": "Santos"}),
		"IsEmpty":isEmpty(null),
		"isEmpty": isEmpty('')
	}
	
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<ee:transform doc:name="minAndMax" doc:id="1320d2d9-b7c0-4fb3-905e-eecb9362283a" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/dw
---
{
	"max1":max([1,2,3,58]),
	"min1": min([2,5,78,58,1])
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<ee:transform doc:name="mod" doc:id="a7378b74-86bb-45d2-9a57-9908a9f28af7" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
[(10 mod 3)]]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<ee:transform doc:name="**Flatten" doc:id="d2435366-685e-4c14-b603-e2fdb8749d0f" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
var a1 =[1,2,3,4,5,6,7,8,9]
var a2 =[9,1,4,5,18,7,7,8,9]
var a3 =[19,11,14,15,18,17]
var console=[a1,a2, a3] 

---
flatten(console)]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<ee:transform doc:name="Filter" doc:id="6e72b912-c6e9-415b-984f-e76ab2b7ce5c" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
[
	{
		"name": "Bene",
		"id": 2
	},
	{
		"name": "Beniel",
		"id": 1
	},
	{	
	"name": "Berlan",
	"id": 3
		
	}
]filter ((item) ->item.id > 1)]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
</mule>
